#
# Makefile for ILISOnalyzer
#
# Options (in theory):
# make NO_MIDAS=1 # build without MIDAS support
# make NO_ROOT=1 # build without ROOT support
# 
# Options (in practice):
# midasio and TMidasOnline both depend on MIDAS
# (and a lot depends on ROOT)
# and the analysis software is junk without so...
#

CXXFLAGS = -g -O2 -Wall -Wuninitialized -I./inc

# required/non-optional libz package for GZIP decompression (.mid.gz)

HAVE_LIBZ := 1
CXXFLAGS  += -DHAVE_LIBZ
USER_LIBS += -lz

# optional ROOT libraries

ifndef NO_ROOT
ROOTVERSION := $(shell root-config --version)
endif

ifdef ROOTVERSION
HAVE_ROOT  := 1
ROOTFEATURES := $(shell root-config --features)
ROOTLIBDIR := $(shell root-config --libdir)
ROOTLIBS   := -L$(ROOTLIBDIR) $(shell root-config --libs) -lThread
ROOTGLIBS  := -L$(ROOTLIBDIR) $(shell root-config --glibs) -lThread
ROOTCFLAGS := $(shell root-config --cflags)
RPATH    += -Wl,-rpath,$(ROOTLIBDIR)
CXXFLAGS += -DHAVE_ROOT $(ROOTCFLAGS)
CXXFLAGS_ROOTCINT += -DHAVE_ROOT
USER_CFLAGS += $(ROOTCFLAGS)
USER_LIBS   += $(ROOTGLIBS)

endif

# optional MIDAS libraries

ifdef NO_MIDAS
MIDASSYS:=
endif

ifneq ($(MIDASSYS),)

HAVE_MIDAS=1
MIDASLIBS = $(MIDASSYS)/linux/lib/libmidas.a -lutil -lrt
CXXFLAGS += -DHAVE_MIDAS -DOS_LINUX -Dextname -I$(MIDASSYS)/include
USER_CFLAGS += -DOS_LINUX -Dextname -I$(MIDASSYS)/include

UNAME=$(shell uname)
ifeq ($(UNAME),Darwin)
CXXFLAGS += -DOS_LINUX -DOS_DARWIN
USER_CFLAGS += -DOS_LINUX -DOS_DARWIN
CXXFLAGS_ROOTCINT += -DOS_LINUX -DOS_DARWIN
MIDASLIBS = $(MIDASSYS)/darwin/lib/libmidas.a
RPATH=
endif

USER_LIBS += $(MIDASLIBS)

endif

# optional TNetDirectory code (essential for online, otherwise 0)

ifdef HAVE_ROOT
HAVE_LIBNETDIRECTORY := 1
CXXFLAGS += -DHAVE_LIBNETDIRECTORY
OBJS += obj/TMidasOnline.o
endif

ALL  += lib/librootana.a
ALL  += ana.exe
DALL += ana.exe

OBJS += obj/RootLock.o
OBJS += obj/netDirectoryServer.o
OBJS += obj/TRootanaEventLoop.o
OBJS += obj/TDataContainer.o
OBJS += obj/TPeriodicClass.o
OBJS += obj/TV792Data.o
OBJS += obj/TV1190Data.o
OBJS += obj/TMidasEvent.o
OBJS += obj/TMidasFile.o
OBJS += obj/TMidasOnline.o
OBJS += obj/XmlOdb.o
OBJS += obj/midasio.o
OBJS += obj/TV792Histogram.o
OBJS += obj/TV1190Histogram.o
OBJS += obj/TAnaManager.o

all: $(ALL)

RC := inc/rootana_config.h
RF := inc/rootana_cflags.txt
RL := inc/rootana_libs.txt

include:
	-rm -f $(RC)
	touch $(RC)
	echo // rootana_config.h >> $(RC)
	echo // generated by rootana Makefile `date` >> $(RC)
	echo // >> $(RC)
ifdef HAVE_MIDAS
	echo "#define HAVE_MIDAS 1" >> $(RC)
	echo "//#define MIDASSYS $(MIDASSYS)" >> $(RC)
else
	echo "//#define HAVE_MIDAS 1" >> $(RC)
endif
ifdef HAVE_LIBZ
	echo "#define HAVE_LIBZ 1" >> $(RC)
else
	echo "//#define HAVE_LIBZ 1" >> $(RC)
endif
ifdef HAVE_ROOT
	echo "#define HAVE_ROOT 1" >> $(RC)
	echo "//#define ROOTSYS $(ROOTSYS)" >> $(RC)
else
	echo "//#define HAVE_ROOT 1" >> $(RC)
endif
ifdef HAVE_LIBNETDIRECTORY
	echo "#define HAVE_LIBNETDIRECTORY 1" >> $(RC)
else
	echo "//#define HAVE_LIBNETDIRECTORY 1" >> $(RC)
endif
	echo "// end" >> $(RC)
	-rm -f $(RF)
	touch $(RF)
	echo "$(USER_CFLAGS)" >> $(RF)
	-rm -f $(RL)
	touch $(RL)
	echo "$(USER_LIBS)" >> $(RL)

lib/librootana.a: $(OBJS)
	-rm -f $@
	ar -rv $@ $(OBJS)

ana.exe: src/ana.cxx $(OBJS) 
	$(CXX) -o $@ $(CXXFLAGS) $< lib/librootana.a $(MIDASLIBS) $(ROOTGLIBS) -lm -lz -lpthread $(RPATH)

%Dict.o: %Dict.cxx
	$(CXX) -o $@ $(CXXFLAGS) -c -I. $<

%.exe: obj/%.o lib/librootana.a
	$(CXX) -o $@ $(CXXFLAGS) $< lib/librootana.a $(MIDASLIBS) $(ROOTGLIBS) -lm -lz -lpthread $(RPATH)

obj/%.o: src/%.cxx
	$(CXX) $(CXXFLAGS) -o $@ -c $<

dox: include
	doxygen

clean::
	-rm -f */*.o */*.a */*.exe $(ALL)
	-rm -rf */*.exe.dSYM
	-rm -rf html

# end
